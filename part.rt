#preamble ()

⌈ *** definition time *** ⌉

defobj Part_Template () {
      • handler ⇐ ϕ
}

  

⌈ *** composition time *** ⌉
defobj Part () {
      • kind ⇐ ϕ
}


⌈ *** run time *** ⌉

defobj Eh () {
      • inq ⇐ #freshQueue ()
      • outq ⇐ #freshQueue ()
}

defn send (eh,port,obj) {
  #enqueue (eh.outq, make_mevent (port, obj))
}
defn inject (eh,port,obj) {
  #enqueue (eh.inq, make_mevent (port, obj))
}
defn NextInLine_handler (eh) {
  if (not (#empty (eh.inq))) {
     mev ≡ #dequeue (eh.inq)
     eh.handler (eh, mev)
  }
}

